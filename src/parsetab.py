
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "right=PLUSEQMINUSEQTIMESEQDIVEQMODEQLSHIFTEQRSHIFTEQANDEQXOREQOREQleftORleftANDleftEQNEleft<>LEGEleftLSHIFTRSHIFTleft+-left*/%rightUPLUSUMINUSAND ANDEQ DIVEQ DO ELSE EQ FOR GE ID IF LE LSHIFT LSHIFTEQ MINUSEQ MINUSMINUS MODEQ NE NUMBER OR OREQ PLUSEQ PLUSPLUS PRINT RSHIFT RSHIFTEQ SCAN STRING TIMESEQ WHILE XOREQprogram : compound_statementcompound_statement : '{' stmt_list '}'stmt_list : stmt_list statementstmt_list :statement : expression ';'statement : compound_statementstatement : IF '(' expression ')' statementstatement : IF '(' expression ')' statement ELSE statementstatement : WHILE '(' expression ')' statementstatement : DO statement WHILE '(' expression ')' ';'statement : FOR '(' opt_expr ';' opt_expr ';' opt_expr ')' statementopt_expr : expressionopt_expr :statement : PRINT '(' print_args ')' ';'print_args : STRING ',' expressionprint_args : STRINGstatement : SCAN '(' ID ')' ';'assign_op : '='assign_op : PLUSEQassign_op : MINUSEQassign_op : TIMESEQassign_op : DIVEQassign_op : MODEQassign_op : LSHIFTEQassign_op : RSHIFTEQassign_op : ANDEQassign_op : XOREQassign_op : OREQexpression : ID assign_op expressionexpression : expression '+' expression\n    | expression '-' expression\n    | expression '*' expression\n    | expression '/' expression\n    | expression '%' expressionexpression : expression '<' expression\n    | expression '>' expression\n    | expression LE expression\n    | expression GE expressionexpression : expression EQ expression\n    | expression NE expressionexpression : '+' expression %prec UPLUSexpression : '-' expression %prec UMINUSexpression : '~' expressionexpression : '!' expressionexpression : PLUSPLUS IDexpression : MINUSMINUS IDexpression : '(' expression ')'expression : NUMBERexpression : STRINGexpression : ID"
    
_lr_action_items = {'{':([0,3,4,5,6,8,12,25,83,84,90,91,94,96,97,100,101,103,104,],[3,-4,3,-2,-3,-6,3,-5,3,3,-7,-9,-14,-17,3,-8,-10,3,-11,]),'$end':([1,2,5,],[0,-1,-2,]),'}':([3,4,5,6,8,25,90,91,94,96,100,101,104,],[-4,5,-2,-3,-6,-5,-7,-9,-14,-17,-8,-10,-11,]),'IF':([3,4,5,6,8,12,25,83,84,90,91,94,96,97,100,101,103,104,],[-4,9,-2,-3,-6,9,-5,9,9,-7,-9,-14,-17,9,-8,-10,9,-11,]),'WHILE':([3,4,5,6,8,12,25,40,83,84,90,91,94,96,97,100,101,103,104,],[-4,11,-2,-3,-6,11,-5,76,11,11,-7,-9,-14,-17,11,-8,-10,11,-11,]),'DO':([3,4,5,6,8,12,25,83,84,90,91,94,96,97,100,101,103,104,],[-4,12,-2,-3,-6,12,-5,12,12,-7,-9,-14,-17,12,-8,-10,12,-11,]),'FOR':([3,4,5,6,8,12,25,83,84,90,91,94,96,97,100,101,103,104,],[-4,13,-2,-3,-6,13,-5,13,13,-7,-9,-14,-17,13,-8,-10,13,-11,]),'PRINT':([3,4,5,6,8,12,25,83,84,90,91,94,96,97,100,101,103,104,],[-4,14,-2,-3,-6,14,-5,14,14,-7,-9,-14,-17,14,-8,-10,14,-11,]),'SCAN':([3,4,5,6,8,12,25,83,84,90,91,94,96,97,100,101,103,104,],[-4,15,-2,-3,-6,15,-5,15,15,-7,-9,-14,-17,15,-8,-10,15,-11,]),'ID':([3,4,5,6,8,10,12,17,18,19,20,21,22,25,26,27,28,29,30,31,32,33,34,35,36,37,39,41,43,44,45,46,47,48,49,50,51,52,53,54,55,83,84,85,86,88,90,91,94,96,97,99,100,101,103,104,],[-4,16,-2,-3,-6,16,16,16,16,16,16,60,61,-5,16,16,16,16,16,16,16,16,16,16,16,16,16,16,81,16,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,16,16,16,16,16,-7,-9,-14,-17,16,16,-8,-10,16,-11,]),'+':([3,4,5,6,7,8,10,12,16,17,18,19,20,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,41,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,78,82,83,84,85,86,88,90,91,92,94,95,96,97,99,100,101,103,104,],[-4,17,-2,-3,26,-6,17,17,-50,17,17,17,17,-48,-49,-5,17,17,17,17,17,17,17,17,17,17,17,17,26,17,17,17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-41,-42,26,26,-45,-46,-30,-31,-32,-33,-34,26,26,26,26,26,26,26,-47,26,26,26,17,17,17,17,17,-7,-9,26,-14,26,-17,17,17,-8,-10,17,-11,]),'-':([3,4,5,6,7,8,10,12,16,17,18,19,20,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,41,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,78,82,83,84,85,86,88,90,91,92,94,95,96,97,99,100,101,103,104,],[-4,18,-2,-3,27,-6,18,18,-50,18,18,18,18,-48,-49,-5,18,18,18,18,18,18,18,18,18,18,18,18,27,18,18,18,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-41,-42,27,27,-45,-46,-30,-31,-32,-33,-34,27,27,27,27,27,27,27,-47,27,27,27,18,18,18,18,18,-7,-9,27,-14,27,-17,18,18,-8,-10,18,-11,]),'~':([3,4,5,6,8,10,12,17,18,19,20,25,26,27,28,29,30,31,32,33,34,35,36,37,39,41,44,45,46,47,48,49,50,51,52,53,54,55,83,84,85,86,88,90,91,94,96,97,99,100,101,103,104,],[-4,19,-2,-3,-6,19,19,19,19,19,19,-5,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,19,19,19,19,19,-7,-9,-14,-17,19,19,-8,-10,19,-11,]),'!':([3,4,5,6,8,10,12,17,18,19,20,25,26,27,28,29,30,31,32,33,34,35,36,37,39,41,44,45,46,47,48,49,50,51,52,53,54,55,83,84,85,86,88,90,91,94,96,97,99,100,101,103,104,],[-4,20,-2,-3,-6,20,20,20,20,20,20,-5,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,20,20,20,20,20,-7,-9,-14,-17,20,20,-8,-10,20,-11,]),'PLUSPLUS':([3,4,5,6,8,10,12,17,18,19,20,25,26,27,28,29,30,31,32,33,34,35,36,37,39,41,44,45,46,47,48,49,50,51,52,53,54,55,83,84,85,86,88,90,91,94,96,97,99,100,101,103,104,],[-4,21,-2,-3,-6,21,21,21,21,21,21,-5,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,21,21,21,21,21,-7,-9,-14,-17,21,21,-8,-10,21,-11,]),'MINUSMINUS':([3,4,5,6,8,10,12,17,18,19,20,25,26,27,28,29,30,31,32,33,34,35,36,37,39,41,44,45,46,47,48,49,50,51,52,53,54,55,83,84,85,86,88,90,91,94,96,97,99,100,101,103,104,],[-4,22,-2,-3,-6,22,22,22,22,22,22,-5,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,22,22,22,22,22,-7,-9,-14,-17,22,22,-8,-10,22,-11,]),'(':([3,4,5,6,8,9,10,11,12,13,14,15,17,18,19,20,25,26,27,28,29,30,31,32,33,34,35,36,37,39,41,44,45,46,47,48,49,50,51,52,53,54,55,76,83,84,85,86,88,90,91,94,96,97,99,100,101,103,104,],[-4,10,-2,-3,-6,37,10,39,10,41,42,43,10,10,10,10,-5,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,85,10,10,10,10,10,-7,-9,-14,-17,10,10,-8,-10,10,-11,]),'NUMBER':([3,4,5,6,8,10,12,17,18,19,20,25,26,27,28,29,30,31,32,33,34,35,36,37,39,41,44,45,46,47,48,49,50,51,52,53,54,55,83,84,85,86,88,90,91,94,96,97,99,100,101,103,104,],[-4,23,-2,-3,-6,23,23,23,23,23,23,-5,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,23,23,23,23,23,-7,-9,-14,-17,23,23,-8,-10,23,-11,]),'STRING':([3,4,5,6,8,10,12,17,18,19,20,25,26,27,28,29,30,31,32,33,34,35,36,37,39,41,42,44,45,46,47,48,49,50,51,52,53,54,55,83,84,85,86,88,90,91,94,96,97,99,100,101,103,104,],[-4,24,-2,-3,-6,24,24,24,24,24,24,-5,24,24,24,24,24,24,24,24,24,24,24,24,24,24,80,24,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,24,24,24,24,24,-7,-9,-14,-17,24,24,-8,-10,24,-11,]),'ELSE':([5,8,25,90,91,94,96,100,101,104,],[-2,-6,-5,97,-9,-14,-17,-8,-10,-11,]),';':([7,16,23,24,41,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,74,77,78,82,86,87,89,93,98,],[25,-50,-48,-49,-13,-41,-42,-43,-44,-45,-46,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-47,86,-12,-29,-13,94,96,99,101,]),'*':([7,16,23,24,38,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,78,82,92,95,],[28,-50,-48,-49,28,-41,-42,28,28,-45,-46,28,28,-32,-33,-34,28,28,28,28,28,28,28,-47,28,28,28,28,28,]),'/':([7,16,23,24,38,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,78,82,92,95,],[29,-50,-48,-49,29,-41,-42,29,29,-45,-46,29,29,-32,-33,-34,29,29,29,29,29,29,29,-47,29,29,29,29,29,]),'%':([7,16,23,24,38,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,78,82,92,95,],[30,-50,-48,-49,30,-41,-42,30,30,-45,-46,30,30,-32,-33,-34,30,30,30,30,30,30,30,-47,30,30,30,30,30,]),'<':([7,16,23,24,38,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,78,82,92,95,],[31,-50,-48,-49,31,-41,-42,31,31,-45,-46,-30,-31,-32,-33,-34,-35,-36,-37,-38,31,31,31,-47,31,31,31,31,31,]),'>':([7,16,23,24,38,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,78,82,92,95,],[32,-50,-48,-49,32,-41,-42,32,32,-45,-46,-30,-31,-32,-33,-34,-35,-36,-37,-38,32,32,32,-47,32,32,32,32,32,]),'LE':([7,16,23,24,38,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,78,82,92,95,],[33,-50,-48,-49,33,-41,-42,33,33,-45,-46,-30,-31,-32,-33,-34,-35,-36,-37,-38,33,33,33,-47,33,33,33,33,33,]),'GE':([7,16,23,24,38,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,78,82,92,95,],[34,-50,-48,-49,34,-41,-42,34,34,-45,-46,-30,-31,-32,-33,-34,-35,-36,-37,-38,34,34,34,-47,34,34,34,34,34,]),'EQ':([7,16,23,24,38,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,78,82,92,95,],[35,-50,-48,-49,35,-41,-42,35,35,-45,-46,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,35,-47,35,35,35,35,35,]),'NE':([7,16,23,24,38,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,78,82,92,95,],[36,-50,-48,-49,36,-41,-42,36,36,-45,-46,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,36,-47,36,36,36,36,36,]),')':([16,23,24,38,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,78,79,80,81,82,92,95,99,102,],[-50,-48,-49,74,-41,-42,-43,-44,-45,-46,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,83,-47,84,-12,87,-16,89,-29,98,-15,-13,103,]),'=':([16,],[45,]),'PLUSEQ':([16,],[46,]),'MINUSEQ':([16,],[47,]),'TIMESEQ':([16,],[48,]),'DIVEQ':([16,],[49,]),'MODEQ':([16,],[50,]),'LSHIFTEQ':([16,],[51,]),'RSHIFTEQ':([16,],[52,]),'ANDEQ':([16,],[53,]),'XOREQ':([16,],[54,]),'OREQ':([16,],[55,]),',':([80,],[88,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'compound_statement':([0,4,12,83,84,97,103,],[2,8,8,8,8,8,8,]),'stmt_list':([3,],[4,]),'statement':([4,12,83,84,97,103,],[6,40,90,91,100,104,]),'expression':([4,10,12,17,18,19,20,26,27,28,29,30,31,32,33,34,35,36,37,39,41,44,83,84,85,86,88,97,99,103,],[7,38,7,56,57,58,59,62,63,64,65,66,67,68,69,70,71,72,73,75,78,82,7,7,92,78,95,7,78,7,]),'assign_op':([16,],[44,]),'opt_expr':([41,86,99,],[77,93,102,]),'print_args':([42,],[79,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> compound_statement','program',1,'p_program','ai.py',281),
  ('compound_statement -> { stmt_list }','compound_statement',3,'p_compound','ai.py',286),
  ('stmt_list -> stmt_list statement','stmt_list',2,'p_stmt_list','ai.py',291),
  ('stmt_list -> <empty>','stmt_list',0,'p_stmt_list_empty','ai.py',296),
  ('statement -> expression ;','statement',2,'p_statement_expr','ai.py',301),
  ('statement -> compound_statement','statement',1,'p_statement_compound','ai.py',306),
  ('statement -> IF ( expression ) statement','statement',5,'p_statement_if','ai.py',311),
  ('statement -> IF ( expression ) statement ELSE statement','statement',7,'p_statement_if_else','ai.py',316),
  ('statement -> WHILE ( expression ) statement','statement',5,'p_statement_while','ai.py',321),
  ('statement -> DO statement WHILE ( expression ) ;','statement',7,'p_statement_do','ai.py',326),
  ('statement -> FOR ( opt_expr ; opt_expr ; opt_expr ) statement','statement',9,'p_statement_for','ai.py',331),
  ('opt_expr -> expression','opt_expr',1,'p_opt_expr','ai.py',336),
  ('opt_expr -> <empty>','opt_expr',0,'p_opt_expr_empty','ai.py',341),
  ('statement -> PRINT ( print_args ) ;','statement',5,'p_statement_print','ai.py',346),
  ('print_args -> STRING , expression','print_args',3,'p_print_args_fmt','ai.py',351),
  ('print_args -> STRING','print_args',1,'p_print_args_str','ai.py',356),
  ('statement -> SCAN ( ID ) ;','statement',5,'p_statement_scan','ai.py',361),
  ('assign_op -> =','assign_op',1,'p_assign_op_eq','ai.py',367),
  ('assign_op -> PLUSEQ','assign_op',1,'p_assign_op_pluseq','ai.py',372),
  ('assign_op -> MINUSEQ','assign_op',1,'p_assign_op_minuseq','ai.py',377),
  ('assign_op -> TIMESEQ','assign_op',1,'p_assign_op_timeseq','ai.py',382),
  ('assign_op -> DIVEQ','assign_op',1,'p_assign_op_diveq','ai.py',387),
  ('assign_op -> MODEQ','assign_op',1,'p_assign_op_modeq','ai.py',392),
  ('assign_op -> LSHIFTEQ','assign_op',1,'p_assign_op_lshifteq','ai.py',397),
  ('assign_op -> RSHIFTEQ','assign_op',1,'p_assign_op_rshifteq','ai.py',402),
  ('assign_op -> ANDEQ','assign_op',1,'p_assign_op_andeq','ai.py',407),
  ('assign_op -> XOREQ','assign_op',1,'p_assign_op_xoreq','ai.py',412),
  ('assign_op -> OREQ','assign_op',1,'p_assign_op_oreq','ai.py',417),
  ('expression -> ID assign_op expression','expression',3,'p_expression_assign','ai.py',423),
  ('expression -> expression + expression','expression',3,'p_expression_arith','ai.py',429),
  ('expression -> expression - expression','expression',3,'p_expression_arith','ai.py',430),
  ('expression -> expression * expression','expression',3,'p_expression_arith','ai.py',431),
  ('expression -> expression / expression','expression',3,'p_expression_arith','ai.py',432),
  ('expression -> expression % expression','expression',3,'p_expression_arith','ai.py',433),
  ('expression -> expression < expression','expression',3,'p_expression_cmp','ai.py',439),
  ('expression -> expression > expression','expression',3,'p_expression_cmp','ai.py',440),
  ('expression -> expression LE expression','expression',3,'p_expression_cmp','ai.py',441),
  ('expression -> expression GE expression','expression',3,'p_expression_cmp','ai.py',442),
  ('expression -> expression EQ expression','expression',3,'p_expression_eq','ai.py',448),
  ('expression -> expression NE expression','expression',3,'p_expression_eq','ai.py',449),
  ('expression -> + expression','expression',2,'p_expression_unop_plus','ai.py',455),
  ('expression -> - expression','expression',2,'p_expression_unop_minus','ai.py',460),
  ('expression -> ~ expression','expression',2,'p_expression_unop_bitwise_not','ai.py',465),
  ('expression -> ! expression','expression',2,'p_expression_unop_logic_not','ai.py',470),
  ('expression -> PLUSPLUS ID','expression',2,'p_expression_unop_inc','ai.py',476),
  ('expression -> MINUSMINUS ID','expression',2,'p_expression_unop_dec','ai.py',481),
  ('expression -> ( expression )','expression',3,'p_expression_group','ai.py',487),
  ('expression -> NUMBER','expression',1,'p_expression_number','ai.py',492),
  ('expression -> STRING','expression',1,'p_expression_string','ai.py',497),
  ('expression -> ID','expression',1,'p_expression_var','ai.py',502),
]
