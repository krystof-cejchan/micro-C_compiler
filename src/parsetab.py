
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'right=PLUSEQMINUSEQTIMESEQDIVEQMODEQLSHIFTEQRSHIFTEQANDEQXOREQOREQleftEQNEleftORleftANDleftBITORleft^left&leftLSHIFTRSHIFTleft+-left*/%rightUPLUSUMINUSPLUSPLUSMINUSMINUSAND ANDEQ BITOR DIVEQ DO ELSE EQ FOR GE ID IF LE LSHIFT LSHIFTEQ MINUSEQ MINUSMINUS MODEQ NE NUMBER OR OREQ PLUSEQ PLUSPLUS PRINT RSHIFT RSHIFTEQ SCAN STRING TIMESEQ WHILE XOREQprogram : compound_statementcompound_statement : "{" stmt_list "}"stmt_list : stmt_list statementstmt_list : statement : expression ";"statement : compound_statementstatement : IF "(" expression ")" statementstatement : IF "(" expression ")" statement ELSE statementstatement : WHILE "(" expression ")" statementstatement : DO statement WHILE "(" expression ")" ";"statement : FOR "(" opt_expr ";" opt_expr ";" opt_expr ")" statementopt_expr : expressionopt_expr : statement : PRINT "(" print_args ")" ";"print_args : STRING "," expressionprint_args : STRINGstatement : SCAN "(" ID ")" ";"\n    assign_op : \'=\'\n              | PLUSEQ\n              | MINUSEQ\n              | TIMESEQ\n              | DIVEQ\n              | MODEQ\n              | LSHIFTEQ\n              | RSHIFTEQ\n              | ANDEQ\n              | XOREQ\n              | OREQ\n    expression : ID assign_op expression\n    binop : \'+\'\n          | \'-\'\n          | \'*\'\n          | \'/\'\n          | \'%\'\n          | LSHIFT\n          | RSHIFT\n          | BITOR\n          | \'&\'\n          | \'^\'\n          | AND\n          | OR\n          | EQ\n          | NE\n          | \'<\'\n          | \'>\'\n          | LE\n          | GE\n    expression : expression binop expressionexpression : "+" expression %prec UPLUSexpression : "-" expression %prec UMINUSexpression : "~" expressionexpression : "!" expressionexpression : PLUSPLUS IDexpression : MINUSMINUS IDexpression : "(" expression ")"expression : NUMBERexpression : STRINGexpression : ID'
    
_lr_action_items = {'{':([0,3,4,5,6,8,12,25,81,82,88,89,92,94,95,98,99,101,102,],[3,-4,3,-2,-3,-6,3,-5,3,3,-7,-9,-14,-17,3,-8,-10,3,-11,]),'$end':([1,2,5,],[0,-1,-2,]),'}':([3,4,5,6,8,25,88,89,92,94,98,99,102,],[-4,5,-2,-3,-6,-5,-7,-9,-14,-17,-8,-10,-11,]),'IF':([3,4,5,6,8,12,25,81,82,88,89,92,94,95,98,99,101,102,],[-4,9,-2,-3,-6,9,-5,9,9,-7,-9,-14,-17,9,-8,-10,9,-11,]),'WHILE':([3,4,5,6,8,12,25,48,81,82,88,89,92,94,95,98,99,101,102,],[-4,11,-2,-3,-6,11,-5,74,11,11,-7,-9,-14,-17,11,-8,-10,11,-11,]),'DO':([3,4,5,6,8,12,25,81,82,88,89,92,94,95,98,99,101,102,],[-4,12,-2,-3,-6,12,-5,12,12,-7,-9,-14,-17,12,-8,-10,12,-11,]),'FOR':([3,4,5,6,8,12,25,81,82,88,89,92,94,95,98,99,101,102,],[-4,13,-2,-3,-6,13,-5,13,13,-7,-9,-14,-17,13,-8,-10,13,-11,]),'PRINT':([3,4,5,6,8,12,25,81,82,88,89,92,94,95,98,99,101,102,],[-4,14,-2,-3,-6,14,-5,14,14,-7,-9,-14,-17,14,-8,-10,14,-11,]),'SCAN':([3,4,5,6,8,12,25,81,82,88,89,92,94,95,98,99,101,102,],[-4,15,-2,-3,-6,15,-5,15,15,-7,-9,-14,-17,15,-8,-10,15,-11,]),'ID':([3,4,5,6,8,10,12,17,18,19,20,21,22,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,47,49,51,52,53,54,55,56,57,58,59,60,61,62,63,81,82,83,84,86,88,89,92,94,95,97,98,99,101,102,],[-4,16,-2,-3,-6,16,16,16,16,16,16,68,69,-5,16,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,16,16,16,79,16,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,16,16,16,16,16,-7,-9,-14,-17,16,16,-8,-10,16,-11,]),'+':([3,4,5,6,7,8,10,12,16,17,18,19,20,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,49,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,76,80,81,82,83,84,86,88,89,90,92,93,94,95,97,98,99,101,102,],[-4,17,-2,-3,27,-6,17,17,-58,17,17,17,17,-56,-57,-5,17,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,17,27,17,17,17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-49,-50,27,27,-53,-54,27,27,-55,27,27,27,17,17,17,17,17,-7,-9,27,-14,27,-17,17,17,-8,-10,17,-11,]),'-':([3,4,5,6,7,8,10,12,16,17,18,19,20,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,49,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,76,80,81,82,83,84,86,88,89,90,92,93,94,95,97,98,99,101,102,],[-4,18,-2,-3,28,-6,18,18,-58,18,18,18,18,-56,-57,-5,18,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,18,28,18,18,18,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-49,-50,28,28,-53,-54,28,28,-55,28,28,28,18,18,18,18,18,-7,-9,28,-14,28,-17,18,18,-8,-10,18,-11,]),'~':([3,4,5,6,8,10,12,17,18,19,20,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,47,49,52,53,54,55,56,57,58,59,60,61,62,63,81,82,83,84,86,88,89,92,94,95,97,98,99,101,102,],[-4,19,-2,-3,-6,19,19,19,19,19,19,-5,19,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,19,19,19,19,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,19,19,19,19,19,-7,-9,-14,-17,19,19,-8,-10,19,-11,]),'!':([3,4,5,6,8,10,12,17,18,19,20,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,47,49,52,53,54,55,56,57,58,59,60,61,62,63,81,82,83,84,86,88,89,92,94,95,97,98,99,101,102,],[-4,20,-2,-3,-6,20,20,20,20,20,20,-5,20,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,20,20,20,20,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,20,20,20,20,20,-7,-9,-14,-17,20,20,-8,-10,20,-11,]),'PLUSPLUS':([3,4,5,6,8,10,12,17,18,19,20,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,47,49,52,53,54,55,56,57,58,59,60,61,62,63,81,82,83,84,86,88,89,92,94,95,97,98,99,101,102,],[-4,21,-2,-3,-6,21,21,21,21,21,21,-5,21,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,21,21,21,21,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,21,21,21,21,21,-7,-9,-14,-17,21,21,-8,-10,21,-11,]),'MINUSMINUS':([3,4,5,6,8,10,12,17,18,19,20,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,47,49,52,53,54,55,56,57,58,59,60,61,62,63,81,82,83,84,86,88,89,92,94,95,97,98,99,101,102,],[-4,22,-2,-3,-6,22,22,22,22,22,22,-5,22,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,22,22,22,22,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,22,22,22,22,22,-7,-9,-14,-17,22,22,-8,-10,22,-11,]),'(':([3,4,5,6,8,9,10,11,12,13,14,15,17,18,19,20,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,47,49,52,53,54,55,56,57,58,59,60,61,62,63,74,81,82,83,84,86,88,89,92,94,95,97,98,99,101,102,],[-4,10,-2,-3,-6,45,10,47,10,49,50,51,10,10,10,10,-5,10,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,10,10,10,10,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,83,10,10,10,10,10,-7,-9,-14,-17,10,10,-8,-10,10,-11,]),'NUMBER':([3,4,5,6,8,10,12,17,18,19,20,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,47,49,52,53,54,55,56,57,58,59,60,61,62,63,81,82,83,84,86,88,89,92,94,95,97,98,99,101,102,],[-4,23,-2,-3,-6,23,23,23,23,23,23,-5,23,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,23,23,23,23,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,23,23,23,23,23,-7,-9,-14,-17,23,23,-8,-10,23,-11,]),'STRING':([3,4,5,6,8,10,12,17,18,19,20,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,47,49,50,52,53,54,55,56,57,58,59,60,61,62,63,81,82,83,84,86,88,89,92,94,95,97,98,99,101,102,],[-4,24,-2,-3,-6,24,24,24,24,24,24,-5,24,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,24,24,24,78,24,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,24,24,24,24,24,-7,-9,-14,-17,24,24,-8,-10,24,-11,]),'ELSE':([5,8,25,88,89,92,94,98,99,102,],[-2,-6,-5,95,-9,-14,-17,-8,-10,-11,]),';':([7,16,23,24,49,64,65,66,67,68,69,70,72,75,76,80,84,85,87,91,96,],[25,-58,-56,-57,-13,-49,-50,-51,-52,-53,-54,-48,-55,84,-12,-29,-13,92,94,97,99,]),'*':([7,16,23,24,46,64,65,66,67,68,69,70,71,72,73,76,80,90,93,],[29,-58,-56,-57,29,-49,-50,29,29,-53,-54,29,29,-55,29,29,29,29,29,]),'/':([7,16,23,24,46,64,65,66,67,68,69,70,71,72,73,76,80,90,93,],[30,-58,-56,-57,30,-49,-50,30,30,-53,-54,30,30,-55,30,30,30,30,30,]),'%':([7,16,23,24,46,64,65,66,67,68,69,70,71,72,73,76,80,90,93,],[31,-58,-56,-57,31,-49,-50,31,31,-53,-54,31,31,-55,31,31,31,31,31,]),'LSHIFT':([7,16,23,24,46,64,65,66,67,68,69,70,71,72,73,76,80,90,93,],[32,-58,-56,-57,32,-49,-50,32,32,-53,-54,32,32,-55,32,32,32,32,32,]),'RSHIFT':([7,16,23,24,46,64,65,66,67,68,69,70,71,72,73,76,80,90,93,],[33,-58,-56,-57,33,-49,-50,33,33,-53,-54,33,33,-55,33,33,33,33,33,]),'BITOR':([7,16,23,24,46,64,65,66,67,68,69,70,71,72,73,76,80,90,93,],[34,-58,-56,-57,34,-49,-50,34,34,-53,-54,34,34,-55,34,34,34,34,34,]),'&':([7,16,23,24,46,64,65,66,67,68,69,70,71,72,73,76,80,90,93,],[35,-58,-56,-57,35,-49,-50,35,35,-53,-54,35,35,-55,35,35,35,35,35,]),'^':([7,16,23,24,46,64,65,66,67,68,69,70,71,72,73,76,80,90,93,],[36,-58,-56,-57,36,-49,-50,36,36,-53,-54,36,36,-55,36,36,36,36,36,]),'AND':([7,16,23,24,46,64,65,66,67,68,69,70,71,72,73,76,80,90,93,],[37,-58,-56,-57,37,-49,-50,37,37,-53,-54,37,37,-55,37,37,37,37,37,]),'OR':([7,16,23,24,46,64,65,66,67,68,69,70,71,72,73,76,80,90,93,],[38,-58,-56,-57,38,-49,-50,38,38,-53,-54,38,38,-55,38,38,38,38,38,]),'EQ':([7,16,23,24,46,64,65,66,67,68,69,70,71,72,73,76,80,90,93,],[39,-58,-56,-57,39,-49,-50,39,39,-53,-54,39,39,-55,39,39,39,39,39,]),'NE':([7,16,23,24,46,64,65,66,67,68,69,70,71,72,73,76,80,90,93,],[40,-58,-56,-57,40,-49,-50,40,40,-53,-54,40,40,-55,40,40,40,40,40,]),'<':([7,16,23,24,46,64,65,66,67,68,69,70,71,72,73,76,80,90,93,],[41,-58,-56,-57,41,-49,-50,41,41,-53,-54,41,41,-55,41,41,41,41,41,]),'>':([7,16,23,24,46,64,65,66,67,68,69,70,71,72,73,76,80,90,93,],[42,-58,-56,-57,42,-49,-50,42,42,-53,-54,42,42,-55,42,42,42,42,42,]),'LE':([7,16,23,24,46,64,65,66,67,68,69,70,71,72,73,76,80,90,93,],[43,-58,-56,-57,43,-49,-50,43,43,-53,-54,43,43,-55,43,43,43,43,43,]),'GE':([7,16,23,24,46,64,65,66,67,68,69,70,71,72,73,76,80,90,93,],[44,-58,-56,-57,44,-49,-50,44,44,-53,-54,44,44,-55,44,44,44,44,44,]),')':([16,23,24,46,64,65,66,67,68,69,70,71,72,73,76,77,78,79,80,90,93,97,100,],[-58,-56,-57,72,-49,-50,-51,-52,-53,-54,-48,81,-55,82,-12,85,-16,87,-29,96,-15,-13,101,]),'=':([16,],[53,]),'PLUSEQ':([16,],[54,]),'MINUSEQ':([16,],[55,]),'TIMESEQ':([16,],[56,]),'DIVEQ':([16,],[57,]),'MODEQ':([16,],[58,]),'LSHIFTEQ':([16,],[59,]),'RSHIFTEQ':([16,],[60,]),'ANDEQ':([16,],[61,]),'XOREQ':([16,],[62,]),'OREQ':([16,],[63,]),',':([78,],[86,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'compound_statement':([0,4,12,81,82,95,101,],[2,8,8,8,8,8,8,]),'stmt_list':([3,],[4,]),'statement':([4,12,81,82,95,101,],[6,48,88,89,98,102,]),'expression':([4,10,12,17,18,19,20,26,45,47,49,52,81,82,83,84,86,95,97,101,],[7,46,7,64,65,66,67,70,71,73,76,80,7,7,90,76,93,7,76,7,]),'binop':([7,46,64,65,66,67,70,71,73,76,80,90,93,],[26,26,26,26,26,26,26,26,26,26,26,26,26,]),'assign_op':([16,],[52,]),'opt_expr':([49,84,97,],[75,91,100,]),'print_args':([50,],[77,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> compound_statement','program',1,'p_program','ai.py',142),
  ('compound_statement -> { stmt_list }','compound_statement',3,'p_compound','ai.py',146),
  ('stmt_list -> stmt_list statement','stmt_list',2,'p_stmt_list','ai.py',150),
  ('stmt_list -> <empty>','stmt_list',0,'p_stmt_list_empty','ai.py',154),
  ('statement -> expression ;','statement',2,'p_statement_expr','ai.py',160),
  ('statement -> compound_statement','statement',1,'p_statement_compound','ai.py',164),
  ('statement -> IF ( expression ) statement','statement',5,'p_statement_if','ai.py',168),
  ('statement -> IF ( expression ) statement ELSE statement','statement',7,'p_statement_if_else','ai.py',172),
  ('statement -> WHILE ( expression ) statement','statement',5,'p_statement_while','ai.py',176),
  ('statement -> DO statement WHILE ( expression ) ;','statement',7,'p_statement_do','ai.py',180),
  ('statement -> FOR ( opt_expr ; opt_expr ; opt_expr ) statement','statement',9,'p_statement_for','ai.py',184),
  ('opt_expr -> expression','opt_expr',1,'p_opt_expr','ai.py',188),
  ('opt_expr -> <empty>','opt_expr',0,'p_opt_expr_empty','ai.py',192),
  ('statement -> PRINT ( print_args ) ;','statement',5,'p_statement_print','ai.py',198),
  ('print_args -> STRING , expression','print_args',3,'p_print_args_fmt','ai.py',202),
  ('print_args -> STRING','print_args',1,'p_print_args_str','ai.py',206),
  ('statement -> SCAN ( ID ) ;','statement',5,'p_statement_scan','ai.py',210),
  ('assign_op -> =','assign_op',1,'p_assign_op','ai.py',216),
  ('assign_op -> PLUSEQ','assign_op',1,'p_assign_op','ai.py',217),
  ('assign_op -> MINUSEQ','assign_op',1,'p_assign_op','ai.py',218),
  ('assign_op -> TIMESEQ','assign_op',1,'p_assign_op','ai.py',219),
  ('assign_op -> DIVEQ','assign_op',1,'p_assign_op','ai.py',220),
  ('assign_op -> MODEQ','assign_op',1,'p_assign_op','ai.py',221),
  ('assign_op -> LSHIFTEQ','assign_op',1,'p_assign_op','ai.py',222),
  ('assign_op -> RSHIFTEQ','assign_op',1,'p_assign_op','ai.py',223),
  ('assign_op -> ANDEQ','assign_op',1,'p_assign_op','ai.py',224),
  ('assign_op -> XOREQ','assign_op',1,'p_assign_op','ai.py',225),
  ('assign_op -> OREQ','assign_op',1,'p_assign_op','ai.py',226),
  ('expression -> ID assign_op expression','expression',3,'p_expression_assign','ai.py',232),
  ('binop -> +','binop',1,'p_binop','ai.py',238),
  ('binop -> -','binop',1,'p_binop','ai.py',239),
  ('binop -> *','binop',1,'p_binop','ai.py',240),
  ('binop -> /','binop',1,'p_binop','ai.py',241),
  ('binop -> %','binop',1,'p_binop','ai.py',242),
  ('binop -> LSHIFT','binop',1,'p_binop','ai.py',243),
  ('binop -> RSHIFT','binop',1,'p_binop','ai.py',244),
  ('binop -> BITOR','binop',1,'p_binop','ai.py',245),
  ('binop -> &','binop',1,'p_binop','ai.py',246),
  ('binop -> ^','binop',1,'p_binop','ai.py',247),
  ('binop -> AND','binop',1,'p_binop','ai.py',248),
  ('binop -> OR','binop',1,'p_binop','ai.py',249),
  ('binop -> EQ','binop',1,'p_binop','ai.py',250),
  ('binop -> NE','binop',1,'p_binop','ai.py',251),
  ('binop -> <','binop',1,'p_binop','ai.py',252),
  ('binop -> >','binop',1,'p_binop','ai.py',253),
  ('binop -> LE','binop',1,'p_binop','ai.py',254),
  ('binop -> GE','binop',1,'p_binop','ai.py',255),
  ('expression -> expression binop expression','expression',3,'p_expression_binop','ai.py',260),
  ('expression -> + expression','expression',2,'p_expression_unop_plus','ai.py',265),
  ('expression -> - expression','expression',2,'p_expression_unop_minus','ai.py',269),
  ('expression -> ~ expression','expression',2,'p_expression_unop_bitwise_not','ai.py',273),
  ('expression -> ! expression','expression',2,'p_expression_unop_logic_not','ai.py',277),
  ('expression -> PLUSPLUS ID','expression',2,'p_expression_unop_inc','ai.py',281),
  ('expression -> MINUSMINUS ID','expression',2,'p_expression_unop_dec','ai.py',286),
  ('expression -> ( expression )','expression',3,'p_expression_group','ai.py',292),
  ('expression -> NUMBER','expression',1,'p_expression_number','ai.py',296),
  ('expression -> STRING','expression',1,'p_expression_string','ai.py',300),
  ('expression -> ID','expression',1,'p_expression_var','ai.py',304),
]
